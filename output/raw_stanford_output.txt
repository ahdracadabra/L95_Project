(ROOT
  (S
    (NP (DT The) (JJ old) (NN car))
    (VP (VBD broke)
      (PRT (RP down))
      (PP (IN in)
        (NP (DT the) (NN car) (NN park))))
    (. .)))

det(car-3, The-1)
amod(car-3, old-2)
nsubj(broke-4, car-3)
root(ROOT-0, broke-4)
compound:prt(broke-4, down-5)
case(park-9, in-6)
det(park-9, the-7)
compound(park-9, car-8)
obl:in(broke-4, park-9)

(ROOT
  (S
    (NP (DT The) (NNS horses))
    (VP (VBD were)
      (VP
        (VP (VBN broken)
          (PP (IN in)))
        (CC and)
        (VP (VBN ridden)
          (PP (IN in)
            (NP (CD two) (NNS weeks))))))
    (. .)))

det(horses-2, The-1)
nsubj:pass(broken-4, horses-2)
nsubj:pass(ridden-7, horses-2)
aux:pass(broken-4, were-3)
root(ROOT-0, broken-4)
obl(broken-4, in-5)
cc(ridden-7, and-6)
conj:and(broken-4, ridden-7)
case(weeks-10, in-8)
nummod(weeks-10, two-9)
obl:in(ridden-7, weeks-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP (PRP$ my) (NN aunt) (NN ’s) (NN car))
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP we))
          (VP (VBD sold)
            (PP (IN at)
              (NP (NN auction)))
            (NP (JJ last) (NN year))
            (PP (IN in)
              (NP (NNP February)))))))
    (. .)))

nsubj(car-6, It-1)
cop(car-6, was-2)
nmod:poss(car-6, my-3)
compound(car-6, aunt-4)
compound(car-6, ’s-5)
root(ROOT-0, car-6)
obj(sold-9, which-7)
nsubj(sold-9, we-8)
dep(car-6, sold-9)
case(auction-11, at-10)
obl:at(sold-9, auction-11)
amod(year-13, last-12)
obl:tmod(sold-9, year-13)
case(February-15, in-14)
obl:in(sold-9, February-15)

(ROOT
  (S
    (NP
      (NP (DT The)
        (ADJP (JJ long)
          (CC and)
          (JJ lonely))
        (NN road))
      (PP (IN to)
        (NP (NN redemption))))
    (VP (VBZ begins)
      (PP (IN with)
        (NP (NN self) (HYPH -) (NN reflection)))
      (: :)
      (S
        (NP (DT the) (NN need))
        (VP (TO to)
          (VP (VB delve)
            (ADVP (RB inwards))
            (PP (IN to)
              (NP
                (NP (JJ deconstruct) (NNS layers))
                (PP (IN of)
                  (NP (JJ psychological) (NN obfuscation)))))))))
    (. .)))

det(road-5, The-1)
amod(road-5, long-2)
cc(lonely-4, and-3)
conj:and(long-2, lonely-4)
amod(road-5, lonely-4)
nsubj(begins-8, road-5)
case(redemption-7, to-6)
nmod:to(road-5, redemption-7)
root(ROOT-0, begins-8)
case(reflection-12, with-9)
compound(reflection-12, self-10)
punct(reflection-12, --11)
obl:with(begins-8, reflection-12)
det(need-15, the-14)
obj(begins-8, need-15)
mark(delve-17, to-16)
parataxis(begins-8, delve-17)
advmod(delve-17, inwards-18)
case(layers-21, to-19)
amod(layers-21, deconstruct-20)
obl:to(delve-17, layers-21)
case(obfuscation-24, of-22)
amod(obfuscation-24, psychological-23)
nmod:of(layers-21, obfuscation-24)

(ROOT
  (S
    (S
      (NP (PRP$ My) (JJ wildest) (NN dream))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB build)
              (NP
                (NP (DT a) (NN POS) (NN tagger))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP
                      (VP (VBZ processes)
                        (NP
                          (NP (CD 10K) (NNS words))
                          (PP (IN per)
                            (NP (NN second)))))
                      (CC and)
                      (VP (VBZ uses)
                        (NP
                          (NP
                            (QP (RB only) (CD 1))
                            (NNS MB))
                          (PP (IN of)
                            (NP (NNP RAM))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD may)
        (VP (VB prove)
          (ADJP (RB too) (JJ hard)))))
    (. .)))

nmod:poss(dream-3, My-1)
amod(dream-3, wildest-2)
nsubj(is-4, dream-3)
nsubj:xsubj(build-6, dream-3)
root(ROOT-0, is-4)
mark(build-6, to-5)
xcomp(is-4, build-6)
det(tagger-9, a-7)
dep(tagger-9, POS-8)
obj(build-6, tagger-9)
nsubj(processes-11, tagger-9)
nsubj(uses-17, tagger-9)
ref(tagger-9, which-10)
acl:relcl(tagger-9, processes-11)
nummod(words-13, 10K-12)
obj(processes-11, words-13)
case(second-15, per-14)
nmod:per(words-13, second-15)
cc(uses-17, and-16)
acl:relcl(tagger-9, uses-17)
conj:and(processes-11, uses-17)
advmod(1-19, only-18)
nummod(MB-20, 1-19)
obj(uses-17, MB-20)
case(RAM-22, of-21)
nmod:of(MB-20, RAM-22)
cc(prove-27, but-24)
nsubj(prove-27, it-25)
aux(prove-27, may-26)
conj:but(is-4, prove-27)
advmod(hard-29, too-28)
xcomp(prove-27, hard-29)

(ROOT
  (S
    (NP (DT The) (NNP Penn) (NNP Treebank) (NNP tagset))
    (VP (VBD was)
      (VP (VBN culled)
        (PP (IN from)
          (NP
            (NP (DT the) (JJ original)
              (NML (CD 87) (HYPH -) (NN tag))
              (NN tagset))
            (PP (IN for)
              (NP (DT the) (NNP Brown) (NNP Corpus)))))))
    (. .)))

det(tagset-4, The-1)
compound(tagset-4, Penn-2)
compound(tagset-4, Treebank-3)
(culled-6, tagset-4)
aux:pass(culled-6, was-5)
root(ROOT-0, culled-6)
case(tagset-13, from-7)
det(tagset-13, the-8)
amod(tagset-13, original-9)
nummod(tag-12, 87-10)
punct(tag-12, --11)
compound(tagset-13, tag-12)
obl:from(culled-6, tagset-13)
case(Corpus-17, for-14)
det(Corpus-17, the-15)
compound(Corpus-17, Brown-16)
nmod:for(tagset-13, Corpus-17)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (NP (DT the) (JJ original)
      (NML (NNP Brown)
        (CC and)
        (NNP C5))
      (NNS tagsets))
    (VP (VBP include)
      (S
        (NP
          (NP (DT a) (JJ separate) (NN tag))
          (PP (IN for)
            (NP
              (NP (DT each))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ different) (NNS forms))
                  (PP (IN of)
                    (NP (DT the) (NNS verbs))))))))
        (VP
          (VP (VB do)
            (PRN (-LRB- -LRB-)
              (FRAG
                (ADVP (FW e.g.))
                (NP (NNP C5) (NNP tag) (NNP VDD))
                (SBAR (IN for)
                  (S
                    (VP (VBD did)
                      (CC and)
                      (VBD VDG)
                      (NP (NN tag))
                      (PP (IN for)
                        (S
                          (VP (VBG doing))))))))
              (-RRB- -RRB-)))
          (, ,)
          (VP (VB be))
          (CC and)
          (VP (VB have)))))
    (. .)))

case(example-2, For-1)
obl:for(include-9, example-2)
det(tagsets-8, the-3)
amod(tagsets-8, original-4)
compound(tagsets-8, Brown-5)
cc(C5-7, and-6)
conj:and(Brown-5, C5-7)
compound(tagsets-8, C5-7)
nsubj(include-9, tagsets-8)
root(ROOT-0, include-9)
det(tag-12, a-10)
amod(tag-12, separate-11)
nsubj(do-22, tag-12)
nsubj(be-37, tag-12)
nsubj(have-39, tag-12)
case(each-14, for-13)
nmod:for(tag-12, each-14)
case(forms-18, of-15)
det(forms-18, the-16)
amod(forms-18, different-17)
nmod:of(each-14, forms-18)
case(verbs-21, of-19)
det(verbs-21, the-20)
nmod:of(forms-18, verbs-21)
ccomp(include-9, do-22)
dep(VDD-27, e.g.-24)
compound(VDD-27, C5-25)
compound(VDD-27, tag-26)
dep(do-22, VDD-27)
mark(did-29, for-28)
dep(VDD-27, did-29)
cc(VDG-31, and-30)
dep(VDD-27, VDG-31)
conj:and(did-29, VDG-31)
obj(did-29, tag-32)
mark(doing-34, for-33)
advcl(did-29, doing-34)
ccomp(include-9, be-37)
conj:and(do-22, be-37)
cc(have-39, and-38)
ccomp(include-9, have-39)
conj:and(do-22, have-39)

(ROOT
  (S
    (ADVP (RB Thus))
    (NP (DT the)
      (ADJP (JJ EM) (HYPH -) (VBN trained))
      (NML (`` “) (JJ pure) (NN HMM) ('' ”))
      (NN tagger))
    (VP (VBZ is)
      (ADVP (RB probably))
      (ADJP (RBS best) (JJ suited)
        (PP (IN to)
          (NP (NNS cases))))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT no) (NN training) (NNS data))
          (VP (VBZ is)
            (ADJP (JJ available))
            (, ,)
            (PP (IN for)
              (NP
                (NP (NN example))
                (, ,)
                (SBAR
                  (WHNP
                    (NP (WRB when) (JJ tagging) (NNS languages))
                    (WHPP (IN for)
                      (WHNP (WDT which))))
                  (S
                    (NP (DT no) (NNS data))
                    (VP (VBD was)
                      (ADJP (RB previously) (NN hand) (HYPH -) (VBN tagged)))))))))))
    (. .)))

advmod(suited-14, Thus-1)
det(tagger-10, the-2)
dep(trained-5, EM-3)
punct(trained-5, --4)
amod(tagger-10, trained-5)
amod(HMM-8, pure-7)
compound(tagger-10, HMM-8)
nsubj(suited-14, tagger-10)
cop(suited-14, is-11)
advmod(suited-14, probably-12)
advmod(suited-14, best-13)
root(ROOT-0, suited-14)
case(cases-16, to-15)
obl:to(suited-14, cases-16)
advmod(available-22, where-17)
det(data-20, no-18)
compound(data-20, training-19)
nsubj(available-22, data-20)
cop(available-22, is-21)
advcl(suited-14, available-22)
case(example-25, for-24)
obl:for(available-22, example-25)
nmod:for(languages-29, example-25)
advmod(languages-29, when-27)
amod(languages-29, tagging-28)
obj(tagged-38, languages-29)
case(which-31, for-30)
ref(example-25, which-31)
det(data-33, no-32)
nsubj:pass(tagged-38, data-33)
aux:pass(tagged-38, was-34)
advmod(tagged-38, previously-35)
dep(tagged-38, hand-36)
punct(tagged-38, --37)
acl:relcl(example-25, tagged-38)

(ROOT
  (S
    (NP
      (NP (NNP Skill))
      (PP (IN without)
        (NP (NN imagination))))
    (VP
      (VP (VBZ is)
        (ADJP (JJ craftsmanship)))
      (CC and)
      (VP (VBZ gives)
        (NP (PRP us))
        (NP
          (NP (JJ many) (JJ useful) (NNS objects))
          (PP (JJ such) (IN as)
            (NP (NN wickerwork) (NN picnic) (NNS baskets))))))
    (. .)))

nsubj(craftsmanship-5, Skill-1)
nsubj(gives-7, Skill-1)
case(imagination-3, without-2)
nmod:without(Skill-1, imagination-3)
cop(craftsmanship-5, is-4)
root(ROOT-0, craftsmanship-5)
cc(gives-7, and-6)
conj:and(craftsmanship-5, gives-7)
iobj(gives-7, us-8)
amod(objects-11, many-9)
amod(objects-11, useful-10)
obj(gives-7, objects-11)
case(baskets-16, such-12)
fixed(such-12, as-13)
compound(baskets-16, wickerwork-14)
compound(baskets-16, picnic-15)
nmod:such_as(objects-11, baskets-16)

(ROOT
  (S
    (NP
      (NP (NNP Imagination))
      (PP (IN without)
        (NP (NN skill))))
    (VP (VBZ gives)
      (NP (PRP us))
      (NP (JJ modern) (NN art)))
    (. .)))

nsubj(gives-4, Imagination-1)
case(skill-3, without-2)
nmod:without(Imagination-1, skill-3)
root(ROOT-0, gives-4)
iobj(gives-4, us-5)
amod(art-7, modern-6)
obj(gives-4, art-7)

(ROOT
  (S (CC But)
    (S
      (NP
        (ADJP (RB far) (JJR fewer))
        (NNS people))
      (ADVP (RB fully))
      (VP (VBP understand)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (DT the) (NNP Media) (NNP Lab))
            (VP
              (VP (VBZ operates))
              (, ,)
              (VP (VBZ fits)
                (PP (IN into)
                  (NP (NNP MIT))))
              (, ,)
              (CC and)
              (VP (VBZ encourages)
                (NP (PDT such) (DT a) (JJ creative) (NN environment))))))))
    (: ;)
    (S
      (NP
        (NP
          (QP (RB about) (PDT half)))
        (PP (IN of)
          (NP (DT the) (NN anniversary) (NN celebration) (NN ’s) (NN program))))
      (VP (VBD focused)
        (PP (IN on)
          (S
            (ADVP (RB simply))
            (VP (VBG defining)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (DT the) (NNP Media) (NNP Lab))
                  (VP (VBZ is)))))))))
    (. .)))

cc(understand-6, But-1)
advmod(fewer-3, far-2)
amod(people-4, fewer-3)
nsubj(understand-6, people-4)
advmod(understand-6, fully-5)
root(ROOT-0, understand-6)
advmod(operates-11, how-7)
det(Lab-10, the-8)
compound(Lab-10, Media-9)
nsubj(operates-11, Lab-10)
nsubj(fits-13, Lab-10)
nsubj(encourages-18, Lab-10)
ccomp(understand-6, operates-11)
ccomp(understand-6, fits-13)
conj:and(operates-11, fits-13)
case(MIT-15, into-14)
obl:into(fits-13, MIT-15)
cc(encourages-18, and-17)
ccomp(understand-6, encourages-18)
conj:and(operates-11, encourages-18)
det:predet(environment-22, such-19)
det(environment-22, a-20)
amod(environment-22, creative-21)
obj(encourages-18, environment-22)
advmod(half-25, about-24)
nsubj(focused-32, half-25)
case(program-31, of-26)
det(program-31, the-27)
compound(program-31, anniversary-28)
compound(program-31, celebration-29)
compound(program-31, ’s-30)
nmod:of(half-25, program-31)
parataxis(understand-6, focused-32)
mark(defining-35, on-33)
advmod(defining-35, simply-34)
advcl(focused-32, defining-35)
obj(is-40, what-36)
det(Lab-39, the-37)
compound(Lab-39, Media-38)
nsubj(is-40, Lab-39)
ccomp(defining-35, is-40)

(ROOT
  (S
    (PP (RB Instead) (IN of)
      (S
        (ADVP (RB constantly))
        (VP (VBG worrying)
          (PP (IN about)
            (NP (NN funding))))))
    (, ,)
    (NP
      (NP (DT the) (NN faculty))
      (CC and)
      (NP (NNS students)))
    (VP (MD can)
      (VP (VB focus)
        (PP (IN on)
          (NP (PRP$ their) (NN project)))
        (, ,)
        (PP (IN with)
          (NP
            (NP (DT the) (NN exception))
            (PP (IN of)
              (NP
                (NP
                  (NP (NNS sponsors))
                  ('' ’)
                  (NP (NNS weeks)))
                (, ,)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP they))
                    (VP (VBP have)
                      (S
                        (VP (TO to)
                          (VP (VB convince)
                            (NP (NNS companies))
                            (S
                              (VP (TO to)
                                (VP (VB start)
                                  (CC or)
                                  (VB continue)
                                  (NP (PRP$ their) (NN support)))))))))))))))))
    (. .)))

mark(worrying-4, Instead-1)
fixed(Instead-1, of-2)
advmod(worrying-4, constantly-3)
advcl(focus-13, worrying-4)
case(funding-6, about-5)
obl:about(worrying-4, funding-6)
det(faculty-9, the-8)
nsubj(focus-13, faculty-9)
cc(students-11, and-10)
conj:and(faculty-9, students-11)
nsubj(focus-13, students-11)
aux(focus-13, can-12)
root(ROOT-0, focus-13)
case(project-16, on-14)
nmod:poss(project-16, their-15)
obl:on(focus-13, project-16)
case(exception-20, with-18)
det(exception-20, the-19)
obl:with(focus-13, exception-20)
case(sponsors-22, of-21)
nmod:of(exception-20, sponsors-22)
dep(sponsors-22, weeks-24)
advmod(have-28, when-26)
nsubj(have-28, they-27)
nsubj:xsubj(convince-30, they-27)
acl:relcl(sponsors-22, have-28)
mark(convince-30, to-29)
xcomp(have-28, convince-30)
obj(convince-30, companies-31)
nsubj:xsubj(start-33, companies-31)
nsubj:xsubj(continue-35, companies-31)
mark(start-33, to-32)
xcomp(convince-30, start-33)
cc(continue-35, or-34)
xcomp(convince-30, continue-35)
conj:or(start-33, continue-35)
nmod:poss(support-37, their-36)
obj(start-33, support-37)

